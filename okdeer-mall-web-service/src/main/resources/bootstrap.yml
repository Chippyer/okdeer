---
server:
  port: 8020

spring:
  application:
    name: okdeer-mall-web-service
    version: 1.0.0
  profiles: service8020
  security:
    user:
      name: admin
      password: iABvsHDmjD
---
server:
  port: 8030

spring:
  application:
    name: okdeer-mall-web-service
    version: 1.0.0
  profiles: service8030
  security:
    user:
      name: admin
      password: iABvsHDmjD
---
eureka:
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    prefer-ip-address: true
  client:
    register-with-eureka: true
    healthcheck:
      enabled: true
    serviceUrl:
#    网上博文看到的是只需要配置一个server地址，由于server之间会做同步，所以其他server也会有client的注册信息，而且这样不会因为server的增加而修改client端的代码
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@master.okdeer.com:11001/eureka/,http://${spring.security.user.name}:${spring.security.user.password}@slave1.okdeer.com:11002/eureka/

spring:
  jpa:
    show-sql: true
    properties:
      hibernate:
        hbm2ddl:
          auto: create
  datasource:
    # durid的数据库连接池 主数据源，默认的，spring boot 1.4版本中没有spring.datasource.type属性
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://127.0.0.1:3306/ca?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: 'sMB+xUlL667fDqqcTwUHtg=='
    password: 'sMB+xUlL667fDqqcTwUHtg=='
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql

    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 通常来说只需要修改初始化大小，最小，最大这三个配置就可以了
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    # orcale通常设置为true mysql则可以配置为false，分库发表较多的数据库，建议配置为false
    # 目前不知道为什么 先不改原来的配置
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计,'wall'用于防火墙（防止SQL注入）
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

#logging:
#  file: /data/logs/mes-cloud-${spring.application.name}.log
#  level: info
#为了更直观的观察sleuth的跟踪信息 改为debug
logging.level.org.springframework.web.servlet.DispatcherServlet: DEBUG

